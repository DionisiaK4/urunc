name: Release Trigger

on:
  push:
    branches:
      - main
    paths:
      - VERSION
  workflow_dispatch:
env:
  ARTIFACTS_PATH: 'dist/'

jobs:
  parse-version-manifest:
    name: Parse Version Manifest
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.parse_manifest.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version manifest
        id: parse_manifest
        run: |
          VERSION="v$(cat VERSION)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version=$VERSION"

      - name: Log outputs
        run: |
          echo "Version: ${{ steps.parse_manifest.outputs.version }}"
       
  tag-parent: 
    name: Tag Parent Repository
    runs-on: ubuntu-latest
    needs: [parse-version-manifest]
    if: needs.parse-version-manifest.outputs.version != ''
    steps:
      - name: Generate urunc-bot token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.URUNC_BOT_APP_ID }}
          private-key: ${{ secrets.URUNC_BOT_PRIVATE_KEY }}

      - name: Tag Parent Repository
        uses: gntouts/tag-remote-repo-action@v1.0.0
        id: tag_parent
        with:
          repository: ${{ github.repository }}
          tag: ${{ needs.parse-version-manifest.outputs.version }}
          token: ${{ steps.generate-token.outputs.token }}
          skip_update: true
      - name: Log outputs
        env:
          REPOSITORY: ${{ github.repository }}
          VERSION: ${{steps.tag_parent.outputs.tag}}
          RESULT: ${{ steps.tag_parent.outputs.result }}
          MESSAGE: ${{ steps.tag_parent.outputs.message }}
          TAG: ${{ steps.tag_parent.outputs.tag }}
          COMMIT: ${{ steps.tag_parent.outputs.commit }}
        run: |
          echo "Repository: $REPOSITORY"
          echo "Version: $VERSION"
          echo "Result: $RESULT"
          echo "Message: $MESSAGE"
          echo "Tag: $TAG"
          echo "Commit: $COMMIT"

  ci:
    needs: [parse-version-manifest,tag-parent]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
      pull-requests: read
    uses: ./.github/workflows/ci.yml
    with:
      ref: ${{ needs.parse-version-manifest.outputs.version }}
    secrets: inherit

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ci,parse-version-manifest]
    if: needs.parse-version-manifest.outputs.version != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download urunc amd64 build artifact 
        uses: actions/download-artifact@v5
        with:
          name: urunc_static_amd64-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_PATH }}
          merge-multiple: true
      - name: Download shim amd64 build artifact 
        uses: actions/download-artifact@v5
        with:
          name: containerd-shim-urunc-v2_static_amd64-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_PATH }}
          merge-multiple: true

      - name: Download urunc arm64 build artifact 
        uses: actions/download-artifact@v5
        with:
          name: urunc_static_arm64-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_PATH }}
          merge-multiple: true

      - name: Download shim arm64 build artifact 
        uses: actions/download-artifact@v5
        with:
          name: containerd-shim-urunc-v2_static_arm64-${{ github.run_id }}
          path: ${{ env.ARTIFACTS_PATH }}
          merge-multiple: true

      - name: Generate urunc-bot token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.URUNC_BOT_APP_ID }}
          private-key: ${{ secrets.URUNC_BOT_PRIVATE_KEY }}


      - name: Extract release notes for ${{ needs.parse-version-manifest.outputs.version }}
        id: extract_notes
        run: |
          release_notes=$(awk '
          $0 ~ /^# ${{ needs.parse-version-manifest.outputs.version }}$/ {found=1; next}
          found && $0 ~ /^# / {exit}
          found {print}
          ' CHANGELOG.md)
          # Save as multi-line output (for reusable later)
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$release_notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create initial release
        uses: softprops/action-gh-release@v2
        id: create_release
        with:
          files: |
            ${{ env.ARTIFACTS_PATH}}/urunc_static_amd64
            ${{ env.ARTIFACTS_PATH}}/urunc_static_arm64
            ${{ env.ARTIFACTS_PATH}}/containerd-shim-urunc-v2_static_amd64
            ${{ env.ARTIFACTS_PATH}}/containerd-shim-urunc-v2_static_arm64
          body: ${{ steps.extract_notes.outputs.release_notes }}
          name: ${{needs.parse-version-manifest.outputs.version}}
          draft: false
          prerelease: false
          generate_release_notes: false
          tag_name: ${{needs.parse-version-manifest.outputs.version}}
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
